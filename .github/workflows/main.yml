name: Release Creation

on:
  release:
    types: [published]

env:
  package_type: module
  node_version: 20
  fvtt_minimum: 10
  fvtt_verified: 11
  fvtt_dry_run: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.get_id.outputs.id }}
      version-without-v: ${{ steps.get_version.outputs.version-without-v }}
    steps:
      - uses: actions/checkout@v2

      # get part of the tag after the `v`
      - name: Extract tag version number
        id: get_version
        uses: battila7/get-version-action@v2
      - run: echo ${{ steps.get_version.outputs.version-without-v }}

      - name: Extract FoundryVTT id
        id: get_id
        run: |
          value=$(jq -r '.id' ${{ env.package_type }}.json)
          echo "id is $value"
          echo "id=$value" >> "$GITHUB_OUTPUT"

      # Substitute the Manifest and Download URLs in the module.json
      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: "${{ env.package_type }}.json"
        env:
          version: ${{steps.get_version.outputs.version-without-v}}
          url: https://github.com/${{github.repository}}
          manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
          download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip

      # Create a zip file with all files required by the module to add to the release
      - run: zip -r ./module.zip materialdeck-template.js module.json README.md changelog.md LICENSE

      # Create a release for this specific version
      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.release.name }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./module.json, ./module.zip"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
      - name: Submit package to FoundryVTT Package Release API
        run: |
          curl -X POST "https://api.foundryvtt.com/_api/packages/release_version/" \
            -H "Content-Type: application/json" \
            -H "Authorization: ${{ secrets.FOUNDRYVTT_RELEASE_TOKEN }}" \
            -d '{
              "id": "${{ steps.get_id.outputs.id }}",
              "dry-run": ${{ env.fvtt_dry_run }},
              "release": {
                "version": "${{ steps.get_version.outputs.version-without-v }}",
                "manifest": "https://github.com/${{ github.repository }}/releases/download/${{steps.get_version.outputs.version-without-v }}/module.json",
                  "notes": "https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.version-without-v }}",
                  "compatibility": {
                    "minimum": "${{ env.fvtt_minimum }}",
                    "verified": "${{ env.fvtt_verified }}"
                  }
                }
              }'
